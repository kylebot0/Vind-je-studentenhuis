var bundle = (function(exports, d3$1) {
  "use strict";

  const svg = d3$1.select("svg").attr("class", "map");
  const zoom = d3.zoom().scaleExtent([1, 16]);
  const tooltip = d3
    .select("#root")
    .append("div")
    .attr("class", "tooltip")
    .style("opacity", 0);

    const gif = d3
      .select("#root")
      .append("div")
      .attr("class", "gif")
      .style("opacity", 0);

  const width = screen.width;
  const height = screen.height;
  // const projectionCircle = d3.geoAlbers()
  //   .scale(250);
  const projection = d3
    .geoMercator()
    .scale(150000)
    .center([4.9, 52.38])
  .translate([width / 2, height / 2]);
  // .translate([width / 2, height / 2])
  const path = d3.geoPath().projection(projection);
  // const colorScale = d3.scaleOrdinal(d3.schemeCategory20);
  const colorStadsdelen = d3.scaleOrdinal(d3.schemePastel2);
  const stadsdeel = {
    A: "Centrum",
    B: "Westpoort",
    E: "West",
    M: "Oost",
    K: "Zuid",
    F: "Nieuw west",
    N: "Noord",
    T: "Zuidoost"
  };
  //d3.schemeGreys
  // const colorLines = d3.scaleSequential(d3.schemeCategory20);

  makeSVG();

  async function getMap() {
    await d3
      .json(
        "https://raw.githubusercontent.com/JulesBlm/RailAmsterdam/master/buurten.json"
      )
      .then(data => data)
      .then(json => {
        console.log(json);
        const stadsdelen = topojson.feature(json, json.objects.buurten)
          .features;
        console.log(stadsdelen);
        svg
          .selectAll(".buurt")
          .data(stadsdelen)
          .enter()
          .insert("g")
          .append("path")
          .attr("class", "buurt")
          .attr("d", path)
          .attr("fill", function(d) {
            return colorStadsdelen(d.properties.Stadsdeel_code[0]);
          })
          .append("title")
          .text(function(d) {
            return (
              stadsdeel[d.properties.Stadsdeel_code] +
              ": " +
              d.properties.Buurtcombinatie
            );
            svg
              .append("path")
              .attr("class", "buurt-borders")
              .attr(
                "d",
                path(
                  topojson.mesh(json, json.objects.buurten, function(a, b) {
                    return a !== b;
                  })
                )
              );

            svg
              .append("path")
              .attr("class", "stadsdeel-borders")
              .attr(
                "d",
                path(
                  topojson.mesh(json, json.objects.buurten, function(a, b) {
                    return (
                      stadsdeel[a.properties.Stadsdeel_code] !==
                      stadsdeel[b.properties.Stadsdeel_code]
                    );
                  })
                )
              );
          });
      });
  }

  async function getData() {
    let data = await d3.json("hogescholen.json");
    return data;
  }
  async function makeSVG() {
    svg.attr("width", width).attr("height", height);
    // getMap(svg, projection);
    await getMap();
    let dataSchool = await getData();
    plotLatLong(dataSchool);
    zoomSVG();
  }

  function plotLatLong(data) {
    console.log(data);
    const color = d3
      .scaleLinear()
      .domain([0, 10])
      .range(["#5BECFE"]);

    svg
      .selectAll(".plot")

      .data(data)
      .enter(data)
      .insert("g")
      .attr("class", "scholen")
      .append("circle")

      .attr("cx", function(d, i) {
        console.log(i);
        return projection([d.LNG, d.LAT])[0];
      })
      .attr("cy", function(d, i) {
        return projection([d.LNG, d.LAT])[1];
      })
      .attr("r", "5")
      .style("fill", "#F2C35A");

    svg
      .selectAll(".scholen")
      .on("mouseover", function(d) {
        d3.select(this)
          .transition()
          .duration(350)
          .attr("opacity", "0.6")
          .attr("r", 5 * 1.3)
          .attr("stroke", "#2C6361")
          .attr("stroke-width", "0.5px");
        tooltip
          .transition()
          .duration(200)
          .style("opacity", "0.8");

        tooltip
          .html(
            "<h2>" +
              d.School +
              "</h2><h2> Straat:</h2>" +
              "<p>" +
              d.straatnaam +
              "</p>"
          )
          .style("left", d3.event.pageX + "px")
          .style("top", d3.event.pageY - 125 + "px");
      })
      .on("mouseout", function(d) {
        d3.select(this)
          .transition()
          .attr("r", "5")
          .attr("opacity", "1")
          .attr("stroke-width", "0");

        tooltip
          .transition()
          .duration(200)
          .style("opacity", "0");
      })
      .on("click", function(d) {
        d3.selectAll(".active").attr("class", "non-active");
        d3.select(this).attr("class", "active");

        d3.selectAll(".scholen")
          .transition()
          .delay(300)
          .style("opacity", "0.2");

        d3.selectAll(".non-active")
          .selectAll("circle:nth-child(2)")
          .transition()
          .delay(200)
          .attr("r", "0")
          .remove();

        console.log(d3.select(this));
        d3.select(this)
          .append("circle")
          .attr("class", "bufferzone")
          .attr("cy", function(d, i) {
            return projection([d.LNG, d.LAT])[1];
          })
          .attr("cx", function(dStudent, i) {
            return projection([d.LNG, d.LAT])[0];
          })
          .attr("r", "0")

          .style("fill", function() {
            return "lightblue";
          })
          .transition()
          .delay(300)
          .attr("r", "75")
          .style("opacity", "0.5");
        d3.json("jongerenhuisvesting.json")
          .then(data => data)
          .then(json => {
            const studentenhuizen = topojson.feature(
              json,
              json.objects.JONGERENSTUDENTENHUISVESTING
            ).features;
            console.log(studentenhuizen);
            svg
              .selectAll(".plot")
              .data(studentenhuizen)
              .enter()
              .insert("g")
              .attr("class", "studentenhuizen")
              .append("circle")
              .attr("cy", function(d, i) {
                return projection(d.geometry.coordinates)[1];
              })
              .attr("cx", function(d, i) {
                return projection(d.geometry.coordinates)[0];
              })
              .style("fill", function() {
                return "#2C6361";
              })
              .transition()
              .delay(400)
              // .duration(500)
              .ease(d3.easeBounce)
              .attr("r", "1.5");
            svg
              .selectAll(".studentenhuizen")
              .on("mouseover", function(dStudent) {
                tooltip
                  .transition()
                  .duration(200)
                  .style("opacity", "0.8");

                tooltip
                  .html(
                    "<h2>" +
                      dStudent.properties.Naam +
                      "</h2><h2>Kamers:</h2>" +
                      "<p>" +
                      dStudent.properties.Aantal_woningen +
                      "</p>" +
                      "<h2> Door:</h2>" +
                      "<p>" +
                      dStudent.properties.Eigenaar_beheerder +
                      "</p>" +
                      "<h2> Status:</h2>" +
                      "<p>" +
                      dStudent.properties.Status +
                      "</p>"
                  )
                  .style("left", d3.event.pageX + "px")
                  .style("top", d3.event.pageY - 125 + "px");
              })
              .on("mouseout", function(dStudent) {
                tooltip
                  .transition()
                  .duration(200)
                  .style("opacity", "0");
              });
            svg
              .selectAll(".studentenhuizen")

              .on("click", function(dStudent) {
                d3.selectAll(".studentenhuizen")
                  .selectAll("circle:nth-child(2)")
                  .transition()
                  .delay(200)
                  .attr("r", "0")
                  .remove();
                gif.transition().duration(200).style('opacity', '1')
                  gif.html(`<img class="gif" src="img/bier.gif"/>`)
                console.log(d3.select(this));
                d3.select(this)
                  .append("circle")
                  .attr("class", "bufferzone")
                  .attr("cy", function(dStudent, i) {
                    return projection(dStudent.geometry.coordinates)[1];
                  })
                  .attr("cx", function(dStudent, i) {
                    return projection(dStudent.geometry.coordinates)[0];
                  })
                  .attr("r", "0")

                  .style("fill", function() {
                    return "#ABC1C0";
                  })
                  .transition()
                  .delay(300)
                  .attr("r", "15")
                  .style("opacity", "0.5");
              });
          });
      });
  }

  function zoomSVG() {
    svg.call(
      zoom.on("zoom", () => {
        svg.selectAll("g").attr("transform", d3.event.transform);
      })
    );
  }

  exports.getData = getData;
  exports.getMap = getMap;

  return exports;
})({}, d3);

//# sourceMappingURL=data:application/json;charset=utf-8;base64,
